#!/usr/bin/env bash

type brew >/dev/null 2>&1 || {
  echo Installing Homebrew...
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
}

__usage() {
  echo Usage: setup [--install-type=BREWFILE_EXT]
}

__brewfile_install() {
  for brewfile in ${1}; do
    echo brew bundle install from ${brewfile}
    brew bundle --file=${brewfile}
  done
}

[[ $# -eq 0 ]] && __brewfile_install "$(ls Brewfile*)"

while [[ $# -ge 1 ]]; do
  arg="$1"
  case ${arg} in
    --install-type*)
      _ext=$(echo ${arg} | cut -d'=' -f 2)
      _brewfiles=$(ls Brewfile* | grep ${_ext})
      if [[ -z ${_brewfiles} ]]; then
        echo "No Brewfiles matching \"${_ext}\" found!"
        __usage
        exit 1
      else
        __brewfile_install ${_brewfiles}
      fi
      shift
      ;;
    *)
      shift
      ;;
  esac
done

echo Setting system Dark theme...
osascript <<EOD
tell application "System Preferences"
  activate
  set the current pane to pane id "com.apple.preference.general"
end tell
tell application "System Events" to tell process "System Preferences"
  delay 1
  click checkbox "Dark" of window "General"
end tell
tell application "System Preferences"
  quit
end tell
EOD

###############################################################################
# General                                                                     #
###############################################################################

# Save to disk (not to iCloud) by default
defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

# Disable the "Are you sure you want to open this application?" dialog
defaults write com.apple.LaunchServices LSQuarantine -bool false

# Reveal IP address, hostname, OS version, etc. when clicking the clock
# in the login window
sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostNameuu

# Enable full keyboard access for all controls
# (e.g. enable Tab in modal dialogs)
defaults write NSGlobalDomain AppleKeyboardUIMode -int 3

# Set the timezone; see `sudo systemsetup -listtimezones` for other values
sudo systemsetup -settimezone "America/New_York" > /dev/null

###############################################################################
# Finder                                                                      #
###############################################################################

# Finder: show all filename extensions
defaults write NSGlobalDomain AppleShowAllExtensions -bool true

# Finder: show status bar
defaults write com.apple.finder ShowStatusBar -bool true

# Finder: show path bar
defaults write com.apple.finder ShowPathbar -bool true

# Display full POSIX path as Finder window title
defaults write com.apple.finder _FXShowPosixPathInTitle -bool true

# Keep folders on top when sorting by name
defaults write com.apple.finder _FXSortFoldersFirst -bool true

# Avoid creating .DS_Store files on network or USB volumes
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true

###############################################################################
# Display                                                                     #
###############################################################################

# Enable subpixel font rendering on non-Apple LCDs
# Reference: https://github.com/kevinSuttle/macOS-Defaults/issues/17#issuecomment-266633501
# Note: Logout or restart required in order to apply changes
# Note: The System Preferences smoothing checkbox was removed in Big Sur
defaults write NSGlobalDomain AppleFontSmoothing -int 1

###############################################################################
# Dock                                                                        #
###############################################################################

# Wipe all (default) app icons from the Dock
# This is only really useful when setting up a new Mac, or if you don't use
# the Dock to launch apps.
defaults write com.apple.dock persistent-apps -array

# Show only open applications in the Dock
defaults write com.apple.dock static-only -bool true

# Don't automatically rearrange Spaces based on most recent use
defaults write com.apple.dock mru-spaces -bool false

# Automatically hide and show the Dock
defaults write com.apple.dock autohide -bool true

##############################################################################
# Miscellaneous                                                              #
##############################################################################

# Use plain text mode for new TextEdit documents
defaults write com.apple.TextEdit RichText -int 0
# Open and save files as UTF-8 in TextEdit
defaults write com.apple.TextEdit PlainTextEncoding -int 4
defaults write com.apple.TextEdit PlainTextEncodingForWrite -int 4

# Enable the debug menu in Disk Utility
defaults write com.apple.DiskUtility DUDebugMenuEnabled -bool true
defaults write com.apple.DiskUtility advanced-image-options -bool true

# Auto-play videos when opened with QuickTime Player
defaults write com.apple.QuickTimePlayerX MGPlayMovieOnOpen -bool true

##############################################################################
# iTerm2 Configuration                                                       #
##############################################################################

echo "Setting up iTerm2 color schemes..."
[[ ! -d ~/repos ]] && mkdir ~/repos

[[ ! -d ~/repos/iTerm2-Color-Schemes ]] && \
  git clone https://github.com/mbadolato/iTerm2-Color-Schemes.git ~/repos/iTerm2-Color-Schemes

osascript <<EOD

tell application "iTerm"
	activate
  delay 1
	tell application "System Events" to keystroke "i" using command down
end tell

-- Bring the window "Preferences" to the front.
delay 1
set timeoutSeconds to 2.0
set uiScript to "click window \"Preferences\" of application process \"iTerm2\""
my doWithTimeout(uiScript, timeoutSeconds)

-- Click the "Colors" tab.
delay 1
set timeoutSeconds to 2.0
set uiScript to "click radio button \"Colors\" of tab group 1 of group 1 of window \"Preferences\" of application process \"iTerm2\""
my doWithTimeout(uiScript, timeoutSeconds)

-- Click the "Color Presets…" menu button.
delay 1
set timeoutSeconds to 2.0
set uiScript to "click menu button 1 of tab group 1 of group 1 of window \"Preferences\" of application process \"iTerm2\""
my doWithTimeout(uiScript, timeoutSeconds)

-- Import...
delay 1
set timeoutSeconds to 2.0
set uiScript to "click menu item \"Import...\" of menu 1 of menu button 1 of tab group 1 of group 1 of window \"Preferences\" of application process \"iTerm2\""
my doWithTimeout(uiScript, timeoutSeconds)

-- Press ⇧⌘G
delay 0.332212
set timeoutSeconds to 2.0
set uiScript to "keystroke \"g\" using {shift down, command down}"
my doWithTimeout(uiScript, timeoutSeconds)

-- Type '~/repos/iTerm2-Color-Schemes/schemes'
delay 0.300195
set timeoutSeconds to 2.0
set uiScript to "keystroke \"~/repos/iTerm2-Color-Schemes/schemes\""
my doWithTimeout(uiScript, timeoutSeconds)

-- Press Return
delay 0.064012
set timeoutSeconds to 2.0
set uiScript to "keystroke \"
\" "

-- Select all themes
tell application "System Events" to keystroke "a" using command down

-- Click the "Open" button.
delay 1
set timeoutSeconds to 2.0
set uiScript to "click UI Element \"Open\" of window \"Open\" of application process \"iTerm2\""
my doWithTimeout(uiScript, timeoutSeconds)

-- Click the "Color Presets…" menu button.
delay 1
set timeoutSeconds to 2.000000
set uiScript to "click menu button 1 of tab group 1 of group 1 of window \"Preferences\" of application process \"iTerm2\""
my doWithTimeout( uiScript, timeoutSeconds )

-- Solarized Dark Higher Contrast
delay 1
set timeoutSeconds to 2.000000
set uiScript to "click menu item \"Solarized Dark Higher Contrast\" of menu 1 of menu button 1 of tab group 1 of group 1 of window \"Preferences\" of application process \"iTerm2\""
my doWithTimeout( uiScript, timeoutSeconds )

-- Click the "Close" button.
delay 1
set timeoutSeconds to 2.000000
set uiScript to "click UI Element 3 of window \"Preferences\" of application process \"iTerm2\""
my doWithTimeout( uiScript, timeoutSeconds )

on doWithTimeout(uiScript, timeoutSeconds)
	set endDate to (current date) + timeoutSeconds
	repeat
		try
			run script "tell application \"System Events\"
" & uiScript & "
end tell"
			exit repeat
		on error errorMessage
			if ((current date) > endDate) then
				error "Can not " & uiScript
			end if
		end try
	end repeat
end doWithTimeout

EOD

echo Configuring iTerm2 preferences...
osascript <<EOD
tell application "iTerm"
	activate
end tell

-- Press ⌘,
delay 0.653743
set timeoutSeconds to 2.0
set uiScript to "keystroke \",\" using command down"
my doWithTimeout(uiScript, timeoutSeconds)

-- Click the "General" toolbar button.
delay 1
set timeoutSeconds to 2.0
set uiScript to "click UI Element \"General\" of tool bar 1 of window \"Preferences\" of application process \"iTerm2\""
my doWithTimeout(uiScript, timeoutSeconds)

-- Click the "Preferences" tab.
delay 0.534177
set timeoutSeconds to 2.0
set uiScript to "click radio button \"Preferences\" of tab group 1 of group 1 of window \"Preferences\" of application process \"iTerm2\""
my doWithTimeout(uiScript, timeoutSeconds)

-- Click the "Load preferences from a custom folder or URL" checkbox.
delay 1
set timeoutSeconds to 2.0
set uiScript to "click checkbox \"Load preferences from a custom folder or URL\" of tab group 1 of group 1 of window \"Preferences\" of application process \"iTerm2\""
my doWithTimeout(uiScript, timeoutSeconds)

-- Press ⇧⌘G
delay 0.332212
set timeoutSeconds to 2.0
set uiScript to "keystroke \"g\" using {shift down, command down}"
my doWithTimeout(uiScript, timeoutSeconds)

-- Click the "Go" button.
delay 1
set timeoutSeconds to 2.0
set uiScript to "click UI Element \"Go\" of sheet 1 of window \"Open\" of application process \"iTerm2\""
my doWithTimeout(uiScript, timeoutSeconds)

-- Click the "Open" button.
delay 1
set timeoutSeconds to 2.0
set uiScript to "click UI Element \"Open\" of window \"Open\" of application process \"iTerm2\""
my doWithTimeout(uiScript, timeoutSeconds)

-- Click the "Don't Copy" button.
delay 1
set timeoutSeconds to 2.0
set uiScript to "click UI Element 4 of window 1 of application process \"iTerm2\""
my doWithTimeout(uiScript, timeoutSeconds)

-- Click the "Close" button.
delay 2.088034
set timeoutSeconds to 2.0
set uiScript to "click UI Element 3 of window \"Preferences\" of application process \"iTerm2\""
my doWithTimeout(uiScript, timeoutSeconds)

on doWithTimeout(uiScript, timeoutSeconds)
	set endDate to (current date) + timeoutSeconds
	repeat
		try
			run script "tell application \"System Events\"
" & uiScript & "
end tell"
			exit repeat
		on error errorMessage
			if ((current date) > endDate) then
				error "Can not " & uiScript
			end if
		end try
	end repeat
end doWithTimeout

EOD
